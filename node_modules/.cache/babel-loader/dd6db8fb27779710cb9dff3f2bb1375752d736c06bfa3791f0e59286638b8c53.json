{"ast":null,"code":"var _jsxFileName = \"/Users/chiefopoku/Documents/GitHub/ticktask/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TaskInput from \"./TaskInput\";\nimport TaskList from \"./TaskList\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch user and tasks after component loads\n  useEffect(() => {\n    // Fetch authenticated user profile\n    axios.get(\"http://localhost:8000/accounts/profile/\", {\n      withCredentials: true\n    }).then(response => setUser(response.data)).catch(error => console.error(\"Error fetching user:\", error));\n\n    // Fetch user's tasks from the Django backend\n    axios.get(\"http://localhost:8000/api/tasks/\", {\n      withCredentials: true\n    }).then(response => setTasks(response.data)).catch(error => console.error(\"Error fetching tasks:\", error));\n  }, []);\n  const addTask = taskName => {\n    const newTask = {\n      name: taskName,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n\n    // Optionally post this task to the backend\n    axios.post(\"http://localhost:8000/api/tasks/\", newTask, {\n      withCredentials: true\n    }).catch(error => console.error(\"Error adding task:\", error));\n  };\n  const removeTask = index => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n\n    // Optionally delete task from backend\n    axios.delete(`http://localhost:8000/api/tasks/${index}/`, {\n      withCredentials: true\n    }).catch(error => console.error(\"Error deleting task:\", error));\n  };\n  const toggleTask = index => {\n    const updatedTasks = tasks.map((task, i) => {\n      if (i === index) {\n        task.completed = !task.completed;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n\n    // Optionally update task completion in backend\n    axios.put(`http://localhost:8000/api/tasks/${index}/`, updatedTasks[index], {\n      withCredentials: true\n    }).catch(error => console.error(\"Error updating task:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        removeTask: removeTask,\n        toggleTask: toggleTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user info...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"NXXdC49P+xCG3v+p6DIW5FpCNBA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","TaskInput","TaskList","jsxDEV","_jsxDEV","Dashboard","_s","user","setUser","tasks","setTasks","get","withCredentials","then","response","data","catch","error","console","addTask","taskName","newTask","name","completed","post","removeTask","index","updatedTasks","filter","_","i","delete","toggleTask","map","task","put","children","fileName","_jsxFileName","lineNumber","columnNumber","username","_c","$RefreshReg$"],"sources":["/Users/chiefopoku/Documents/GitHub/ticktask/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport TaskInput from \"./TaskInput\";\nimport TaskList from \"./TaskList\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch user and tasks after component loads\n  useEffect(() => {\n    // Fetch authenticated user profile\n    axios\n      .get(\"http://localhost:8000/accounts/profile/\", { withCredentials: true })\n      .then((response) => setUser(response.data))\n      .catch((error) => console.error(\"Error fetching user:\", error));\n\n    // Fetch user's tasks from the Django backend\n    axios\n      .get(\"http://localhost:8000/api/tasks/\", { withCredentials: true })\n      .then((response) => setTasks(response.data))\n      .catch((error) => console.error(\"Error fetching tasks:\", error));\n  }, []);\n\n  const addTask = (taskName) => {\n    const newTask = { name: taskName, completed: false };\n    setTasks([...tasks, newTask]);\n\n    // Optionally post this task to the backend\n    axios\n      .post(\"http://localhost:8000/api/tasks/\", newTask, {\n        withCredentials: true,\n      })\n      .catch((error) => console.error(\"Error adding task:\", error));\n  };\n\n  const removeTask = (index) => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n\n    // Optionally delete task from backend\n    axios\n      .delete(`http://localhost:8000/api/tasks/${index}/`, {\n        withCredentials: true,\n      })\n      .catch((error) => console.error(\"Error deleting task:\", error));\n  };\n\n  const toggleTask = (index) => {\n    const updatedTasks = tasks.map((task, i) => {\n      if (i === index) {\n        task.completed = !task.completed;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n\n    // Optionally update task completion in backend\n    axios\n      .put(`http://localhost:8000/api/tasks/${index}/`, updatedTasks[index], {\n        withCredentials: true,\n      })\n      .catch((error) => console.error(\"Error updating task:\", error));\n  };\n\n  return (\n    <div>\n      <h1>Dashboard</h1>\n      {user ? (\n        <div>\n          <h2>Welcome, {user.username}</h2>\n          <TaskInput addTask={addTask} />\n          <TaskList\n            tasks={tasks}\n            removeTask={removeTask}\n            toggleTask={toggleTask}\n          />\n        </div>\n      ) : (\n        <p>Loading user info...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}