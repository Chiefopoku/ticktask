{"ast":null,"code":"var _jsxFileName = \"/Users/chiefopoku/Documents/GitHub/ticktask/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\"; // Import Firestore\nimport { collection, addDoc, query, onSnapshot, deleteDoc, doc, updateDoc } from \"firebase/firestore\";\nimport TaskInput from \"./TaskInput\";\nimport TaskList from \"./TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks in real-time\n  useEffect(() => {\n    const q = query(collection(db, \"tasks\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      let tasksArr = [];\n      querySnapshot.forEach(doc => {\n        tasksArr.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setTasks(tasksArr);\n    });\n    return () => unsubscribe();\n  }, []);\n  const addTask = async taskName => {\n    try {\n      await addDoc(collection(db, \"tasks\"), {\n        name: taskName,\n        completed: false,\n        userId: user.uid\n      });\n    } catch (error) {\n      console.error(\"Error adding task: \", error);\n    }\n  };\n  const toggleTaskCompletion = async (taskId, completed) => {\n    const taskDocRef = doc(db, \"tasks\", taskId);\n    try {\n      await updateDoc(taskDocRef, {\n        completed: !completed\n      });\n    } catch (error) {\n      console.error(\"Error updating task: \", error);\n    }\n  };\n  const deleteTask = async taskId => {\n    const taskDocRef = doc(db, \"tasks\", taskId);\n    try {\n      await deleteDoc(taskDocRef);\n    } catch (error) {\n      console.error(\"Error deleting task: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user.displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTaskCompletion: toggleTaskCompletion,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","addDoc","query","onSnapshot","deleteDoc","doc","updateDoc","TaskInput","TaskList","jsxDEV","_jsxDEV","Dashboard","user","onLogout","_s","tasks","setTasks","q","unsubscribe","querySnapshot","tasksArr","forEach","push","data","id","addTask","taskName","name","completed","userId","uid","error","console","toggleTaskCompletion","taskId","taskDocRef","deleteTask","className","children","displayName","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/chiefopoku/Documents/GitHub/ticktask/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\"; // Import Firestore\nimport {\n  collection,\n  addDoc,\n  query,\n  onSnapshot,\n  deleteDoc,\n  doc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport TaskInput from \"./TaskInput\";\nimport TaskList from \"./TaskList\";\n\nconst Dashboard = ({ user, onLogout }) => {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks in real-time\n  useEffect(() => {\n    const q = query(collection(db, \"tasks\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      let tasksArr = [];\n      querySnapshot.forEach((doc) => {\n        tasksArr.push({ ...doc.data(), id: doc.id });\n      });\n      setTasks(tasksArr);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const addTask = async (taskName) => {\n    try {\n      await addDoc(collection(db, \"tasks\"), {\n        name: taskName,\n        completed: false,\n        userId: user.uid,\n      });\n    } catch (error) {\n      console.error(\"Error adding task: \", error);\n    }\n  };\n\n  const toggleTaskCompletion = async (taskId, completed) => {\n    const taskDocRef = doc(db, \"tasks\", taskId);\n    try {\n      await updateDoc(taskDocRef, { completed: !completed });\n    } catch (error) {\n      console.error(\"Error updating task: \", error);\n    }\n  };\n\n  const deleteTask = async (taskId) => {\n    const taskDocRef = doc(db, \"tasks\", taskId);\n    try {\n      await deleteDoc(taskDocRef);\n    } catch (error) {\n      console.error(\"Error deleting task: \", error);\n    }\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <h1>Welcome, {user.displayName}</h1>\n      <button onClick={onLogout}>Logout</button>\n      <TaskInput addTask={addTask} />\n      <TaskList\n        tasks={tasks}\n        toggleTaskCompletion={toggleTaskCompletion}\n        deleteTask={deleteTask}\n      />\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}